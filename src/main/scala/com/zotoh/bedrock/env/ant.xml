<project name="bedrock-runner" basedir="." default="release">

  <!-- DO NOT EDIT THIS FILE, IT IS MAINTAINED BY THE
        FRAMEWORK
  -->

  <property environment="env"/>

  <property name="bedrock.home" value="${env.BEDROCK_HOME}" />
  <property name="app.dir" value="${basedir}/.." />
  <basename property="app.name" file="${app.dir}"/>

  <condition property="os.is.windows">
      <os name="windows"/>
  </condition>

  <!-- for web-apps -->
    <property name="webapps.dir" value="${app.dir}/webapps" />
    <property name="webinf.dir" value="${webapps.dir}/WEB-INF" />
    <property name="webz.dir" value="${webinf.dir}/classes" />
    <property name="webb.dir" value="${webinf.dir}/lib" />
    <property name="webx.dir" value="${webinf.dir}/web.xml" />
  <!-- -->

  <property name="tmp.dir" value="${app.dir}/tmp" />
  <property name="war.dir" value="${tmp.dir}/packj2eewar"/>

  <available file="${webz.dir}/../"
        type="dir"
        property="webinf.yes"/>

  <!-- detect what lang -->
    <available file="${app.dir}/src/main/groovy"   type="dir"   property="src.groovy.yes"/>
    <available file="${app.dir}/src/main/scala"   type="dir"   property="src.scala.yes"/>
    <available file="${app.dir}/src/main/java"   type="dir"   property="src.java.yes"/>
  <!-- -->

  <property name="test.rpt.dir" value="${tmp.dir}/test-reports"/>
  <property name="test.cz.dir" value="${tmp.dir}/test-classes"/>
  <property name="cz.dir"  value="${app.dir}/classes" />

  <property name="my.guid" value="77c02546-8e96-4687-949f-9461ee6a21de"/>

  <path id="compile.classpath">
      <fileset dir="${app.dir}/lib">
          <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${bedrock.home}/thirdparty">
          <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${bedrock.home}/dist">
          <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${bedrock.home}/lib">
          <include name="**/*.jar"/>
      </fileset>
  </path>

  <path id="compile.test.classpath">
      <pathelement path="${test.cz.dir}"/>
      <pathelement path="${cz.dir}"/>
      <path refid="compile.classpath"/>
  </path>

  <taskdef name="groovyc"    classname="org.codehaus.groovy.ant.Groovyc"    classpathref="compile.classpath"/>

  <taskdef name="scalac"    classname="scala.tools.ant.Scalac"   classpathref="compile.classpath"/>

  <target name="clean-classes">
      <delete dir="${webz.dir}" quiet="true" failonerror="false"/>
      <delete dir="${cz.dir}" quiet="true" failonerror="false"/>
      <mkdir dir="${cz.dir}"/>
  </target>

  <target name="clean" depends="clean-classes">
  </target>

  <target name="compile-test-code" depends="compile-code">
      <delete dir="${test.rpt.dir}" quiet="true"/>
      <delete dir="${test.cz.dir}" quiet="true"/>
      <mkdir dir="${test.rpt.dir}"/>
      <mkdir dir="${test.cz.dir}"/>
      <antcall target="ct-1"/>
      <antcall target="ct-2"/>
      <antcall target="ct-3"/>
  </target>

  <target name="compile-code" depends="clean-classes">
      <antcall target="cc-1"/>
      <antcall target="cc-2"/>
      <antcall target="cc-3"/>
  </target>

  <target name="cc-1" depends="" if="src.java.yes">
      <javac destdir="${cz.dir}" srcdir="${app.dir}/src/main/java"
          includeAntRuntime="false" debug="on" debuglevel="lines,vars,source" >
          <classpath refid="compile.classpath"/>
      </javac>
      <copy todir="${cz.dir}">
          <fileset dir="${app.dir}/src/main/java">
              <exclude name="**/*.java"/>
              <exclude name="**/.svn"/>
              <exclude name="**/log4j.properties"/>
          </fileset>
      </copy>
  </target>

  <target name="ct-1" depends="" if="src.java.yes">
      <javac destdir="${test.cz.dir}" srcdir="${app.dir}/src/test/java"
          includeAntRuntime="false" debug="on" debuglevel="lines,vars,source" >
          <classpath refid="compile.test.classpath"/>
      </javac>
      <copy todir="${test.cz.dir}">
          <fileset dir="${app.dir}/src/test/java">
                <exclude name="**/*.java"/>
                <exclude name="**/.svn"/>
                <exclude name="**/log4j.properties"/>
          </fileset>
      </copy>
  </target>

  <target name="cc-2" depends="" if="src.groovy.yes">
      <groovyc destdir="${cz.dir}" srcdir="${app.dir}/src/main/groovy" >
          <classpath refid="compile.classpath"/>
      </groovyc>
      <copy todir="${cz.dir}">
          <fileset dir="${app.dir}/src/main/groovy">
              <exclude name="**/*.groovy"/>
              <exclude name="**/.svn"/>
              <exclude name="**/log4j.properties"/>
          </fileset>
      </copy>
  </target>

  <target name="ct-2" depends="" if="src.groovy.yes">
      <groovyc destdir="${test.cz.dir}" srcdir="${app.dir}/src/test/groovy" >
          <classpath refid="compile.test.classpath"/>
      </groovyc>
      <copy todir="${test.cz.dir}">
          <fileset dir="${app.dir}/src/test/groovy">
              <exclude name="**/*.groovy"/>
              <exclude name="**/.svn"/>
              <exclude name="**/log4j.properties"/>
          </fileset>
      </copy>
  </target>

  <target name="cc-3" depends="" if="src.scala.yes">
      <scalac destdir="${cz.dir}" srcdir="${app.dir}/src/main/scala"
          classpathref="compile.classpath">
          <include name="**/*.scala"/>
      </scalac>
      <copy todir="${cz.dir}">
          <fileset dir="${app.dir}/src/main/scala">
              <exclude name="**/*.scala"/>
              <exclude name="**/.svn"/>
              <exclude name="**/log4j.properties"/>
          </fileset>
      </copy>
  </target>

  <target name="ct-3" depends="" if="src.scala.yes">
      <scalac destdir="${test.cz.dir}" srcdir="${app.dir}/src/test/scala"
          classpathref="compile.test.classpath">
          <include name="**/*.scala"/>
      </scalac>
      <copy todir="${test.cz.dir}">
          <fileset dir="${app.dir}/src/test/scala">
              <exclude name="**/*.scala"/>
              <exclude name="**/.svn"/>
              <exclude name="**/log4j.properties"/>
          </fileset>
      </copy>
  </target>

  <target name="jar" depends="compile-code">
      <jar destfile="${app.dir}/dist/${app.name}.jar" basedir="${cz.dir}"/>
  </target>

  <target name="pre-bundle" depends="">
      <mkdir dir="${bedrock.useroutdir}/${my.guid}"/>
      <copy todir="${bedrock.useroutdir}/${my.guid}">
          <fileset dir="${app.dir}">
              <exclude name="cfg/ant.xml"/>
              <exclude name="tmp/**"/>
          </fileset>
      </copy>
      <copy file="${app.dir}/tmp/ant.orig.xml" tofile="${bedrock.useroutdir}/${my.guid}/cfg/ant.xml" overwrite="true"/>
      <mkdir dir="${bedrock.useroutdir}/${my.guid}/tmp"/>
  </target>

  <target name="bundle-webapp-w32" depends="">
      <antcall target="pack-j2ee-war"/>
  </target>

  <target name="bundle-webapp-nix" depends="">
      <antcall target="pack-j2ee-war"/>
  </target>

  <target name="bundle-w32" depends="">
      <antcall target="pre-bundle"/>
      <zip destfile="${bedrock.useroutdir}/${app.name}.zip" basedir="${bedrock.useroutdir}/${my.guid}"/>
      <delete quiet="true" dir="${bedrock.useroutdir}/${my.guid}"/>
  </target>

  <target name="bundle-nix" depends="">
      <antcall target="pre-bundle"/>
      <tar destfile="${bedrock.useroutdir}/${app.name}.tar" basedir="${bedrock.useroutdir}/${my.guid}" />
      <gzip destfile="${bedrock.useroutdir}/${app.name}.tar.gz" src="${bedrock.useroutdir}/${app.name}.tar" />
      <delete quiet="true" dir="${bedrock.useroutdir}/${my.guid}"/>
  </target>

  <target name="packzip-app" depends="">
      <tar destfile="${tmp.dir}/${app.name}.tar"
          basedir="${app.dir}"
          excludes="${tmp.dir}">
      </tar>
      <delete file="${tmp.dir}/${app.name}.tar.gz"  quiet="true"/>
      <gzip destfile="${tmp.dir}/${app.name}.tar.gz" src="${tmp.dir}/${app.name}.tar" />
      <delete file="${tmp.dir}/${app.name}.tar" />
  </target>

  <target name="run-script-bg-nix" depends="">
      <exec executable="${bedrock.home}/bin/bedrock" dir="${app.dir}">
          <arg value="app"/>
          <arg value="run"/>
          <arg value="${bedrock.scriptfile}"/>
          <arg value="/background"/>
      </exec>
  </target>

  <target name="run-script-bg-w32" depends="">
      <exec executable="cmd.exe" dir="${app.dir}">
          <arg value="/C"/>
          <arg value="start"/>
          <arg value="/B"/>
          <arg value="/MIN"/>
          <arg value="${bedrock.home}/bin/bedrock.bat"/>
          <arg value="app"/>
          <arg value="run"/>
          <arg value="${bedrock.scriptfile}"/>
      </exec>
  </target>

  <target name="run-script" depends="">
     <java fork="false" clonevm="true" classname="com.zotoh.bedrock.etc.AntStart">
      <arg value="-runscript"/>
       <arg value="${bedrock.scriptfile}"/>
       <classpath>
          <pathelement path="${cz.dir}"/>
          <fileset dir="${app.dir}/lib">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${app.dir}/thirdparty">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/dist">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/lib">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/thirdparty">
              <include name="**/*.jar"/>
          </fileset>
       </classpath>
     </java>
  </target>

  <target name="run-svc-bg-nix" depends="">
      <exec executable="${bedrock.home}/bin/bedrock" dir="${app.dir}">
          <arg value="app"/>
          <arg value="invoke"/>
          <arg value="${bedrock.servicepoint}"/>
          <arg value="/background"/>
      </exec>
  </target>

  <target name="run-svc-bg-w32" depends="">
      <exec executable="cmd.exe" dir="${app.dir}">
          <arg value="/C"/>
          <arg value="start"/>
          <arg value="/B"/>
          <arg value="/MIN"/>
          <arg value="${bedrock.home}/bin/bedrock.bat"/>
          <arg value="app"/>
          <arg value="invoke"/>
          <arg value="${bedrock.servicepoint}"/>
      </exec>
  </target>

  <target name="run-svc" depends="">
     <java fork="false" clonevm="true" classname="com.zotoh.bedrock.etc.AntStart">
      <arg value="-invoke"/>
       <arg value="${bedrock.servicepoint}"/>
       <classpath>
          <pathelement path="${cz.dir}"/>
          <fileset dir="${app.dir}/lib">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${app.dir}/thirdparty">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/dist">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/lib">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/thirdparty">
              <include name="**/*.jar"/>
          </fileset>
       </classpath>
     </java>
  </target>

  <target name="run-app-bg-nix" depends="">
      <exec executable="${bedrock.home}/bin/bedrock" dir="${app.dir}">
          <arg value="app"/>
          <arg value="start"/>
          <arg value="/background"/>
      </exec>
  </target>

  <target name="run-app-bg-w32" depends="">
      <exec executable="cmd.exe" dir="${app.dir}">
          <arg value="/C"/>
          <arg value="start"/>
          <arg value="/B"/>
          <arg value="/MIN"/>
          <arg value="${bedrock.home}/bin/bedrock.bat"/>
          <arg value="app"/>
          <arg value="start"/>
      </exec>
  </target>

  <target name="run-app" depends="">
     <java fork="false" clonevm="true" classname="com.zotoh.bedrock.etc.AntStart">
       <classpath>
          <pathelement path="${cz.dir}"/>
          <fileset dir="${app.dir}/lib">
              <include name="**/*.jar"/>
          </fileset>
              <fileset dir="${app.dir}/thirdparty">
                  <include name="**/*.jar"/>
              </fileset>
          <fileset dir="${bedrock.home}/dist">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/lib">
              <include name="**/*.jar"/>
          </fileset>
          <fileset dir="${bedrock.home}/thirdparty">
              <include name="**/*.jar"/>
          </fileset>
       </classpath>
     </java>
  </target>

  <target name="run-dbg-app-w32" depends="">
      <exec executable="${bedrock.home}/bin/bedrock.bat" dir="${app.dir}">
          <arg value="remote-debug"/>
          <arg value="bedrock-server"/>
      </exec>
  </target>

  <target name="run-dbg-app-nix" depends="">
      <exec executable="${bedrock.home}/bin/bedrock" dir="${app.dir}">
          <arg value="remote-debug"/>
          <arg value="bedrock-server"/>
      </exec>
  </target>

  <target name="pack-j2ee-war" if="webinf.yes" depends="jar">
      <copy todir="${bedrock.useroutdir}/webapps/.vault">
          <fileset dir="${app.dir}/.vault"></fileset>
      </copy>
      <copy todir="${bedrock.useroutdir}/webapps/cfg">
          <fileset dir="${app.dir}/cfg">
              <exclude name="app.properties"/>
              <exclude name="app.conf"/>
          </fileset>
      </copy>
      <copy file="${app.dir}/tmp/ant.orig.xml" tofile="${bedrock.useroutdir}/webapps/cfg/ant.xml"/>
      <copy todir="${bedrock.useroutdir}/webapps">
          <fileset dir="${webapps.dir}"></fileset>
      </copy>
      <copy file="${bedrock.useroutdir}/webapps/tmp/web.xml" todir="${bedrock.useroutdir}/webapps/WEB-INF"/>
      <copy todir="${bedrock.useroutdir}/webapps/WEB-INF/lib">
          <fileset dir="${bedrock.home}/dist"></fileset>
          <fileset dir="${bedrock.home}/lib">
              <exclude name="servlet-api-*.jar"/>
              <exclude name="dasein-*.jar"/>
              <exclude name="*.zip"/>
          </fileset>
          <fileset dir="${app.dir}/thirdparty"></fileset>
          <fileset dir="${app.dir}/lib"></fileset>
          <fileset dir="${app.dir}/dist"></fileset>
      </copy>
      <jar destfile="${bedrock.useroutdir}/${app.name}.war">
          <fileset dir="${bedrock.useroutdir}/webapps"></fileset>
      </jar>
      <delete quiet="true" dir="${bedrock.useroutdir}/webapps"/>
  </target>

  <target name="test-code" depends="compile-test-code">
      <junit logfailedtests="true" showoutput="false" printsummary="yes" fork="yes" haltonfailure="yes" >
          <classpath refid="compile.test.classpath"/>
          <batchtest todir="${test.rpt.dir}" >
              <fileset dir="${test.cz.dir}">
                  <include name="**/Test*.*"/>
              </fileset>
              <formatter type="plain" usefile="false"/>
          </batchtest>
      </junit>
  </target>

  <target name="release" depends="">
      <echo message="hello world"/>
  </target>

</project>


